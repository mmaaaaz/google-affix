import {
  BuyMeACoffe,
  CrossIcon,
  GithubIcon,
  SearchIcon
} from '@/components/Icons'
import ThemeSwitcher from '@/components/ThemeSwitcher'
import type { NextPage } from 'next'
import { useTheme } from 'next-themes'
import Head from 'next/head'
import Image from 'next/image'
import { FC, useEffect, useState } from 'react'

const Home: NextPage = () => {
  const { resolvedTheme } = useTheme()
  const [query, setQuery] = useState('')
  const [touched, setTouched] = useState(false)
  const [prefixTags, setPrefixTags] = useState([])
  const [suffixTags, setSuffixTags] = useState([])

  const handleSearch = (e: any) => {
    e.preventDefault()

    if (!query || query.trim().length === 0) return null

    const encodedParams = encodeURIComponent(
      `${prefixTags.join(' ')} ${query.trim()} ${suffixTags.join(' ')}`
    )
    const googleUrl = `https://www.google.com/search?q=${encodedParams}`
    window.location.href = googleUrl
  }

  useEffect(
    () => localStorage.setItem('prefixTags', JSON.stringify(prefixTags)),
    [prefixTags]
  )

  useEffect(
    () => localStorage.setItem('suffixTags', JSON.stringify(suffixTags)),
    [suffixTags]
  )

  const resolvedImage =
    resolvedTheme === 'dark'
      ? '/v1641241147/googlelogo_bw_xh5ubz.png'
      : '/v1641241148/googlelogo_color_fvvc7b.png'

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="flex items-center justify-end w-full p-4 text-sm divide-x divide-secondary-3">
        <div className="pr-6">
          <ThemeSwitcher />
        </div>

        <nav className="flex items-center pl-6 space-x-6">
          <HeaderLink link="https://github.com/mmaaaaz/google-affix">
            <GithubIcon className="w-full h-full" />
          </HeaderLink>

          <HeaderLink link="https://github.com/mmaaaaz/google-affix">
            <BuyMeACoffe className="w-full h-full" />
          </HeaderLink>

          <HeaderLink link="https://github.com/mmaaaaz/google-affix">
            <img
              src="https://avatars.githubusercontent.com/u/80816622?v=4"
              alt="Devmaaaz Github link"
              className="object-contain w-full h-full rounded-full"
            />
          </HeaderLink>
        </nav>
      </header>

      <main className="flex flex-col items-center justify-center w-full h-full px-4">
        <div className="relative max-w-[272px] h-[92px] w-full">
          <Image
            src={resolvedImage}
            alt="Google Logo"
            // width={272}
            // height={92}
            objectFit="contain"
            layout="fill"
          />
          <p className="absolute px-5 font-bold tracking-wider text-white transform translate-x-full bg-green-500 rounded-md shadow-lg select-none shadow-green-400/10 right-1/4 -top-10">
            Affix
          </p>
        </div>

        <form
          onSubmit={(e) => handleSearch(e)}
          className={`max-w-[584px] mt-6 w-full dark:hover:bg-primary-2 dark:focus:bg-primary-2 dark:hover:border-transparent border hover:shadow-md rounded-full overflow-hidden h-11 my-0 mx-auto relative ${
            touched
              ? 'dark:bg-primary-2 dark:border-transparent shadow-lg'
              : 'border-input-border'
          }`}
        >
          <SearchIcon className="absolute w-5 h-5 text-gray-300 dark:text-gray-400 top-2/4 -translate-y-2/4 left-4" />

          <input
            className="w-full h-full bg-transparent border-none outline-none px-[9%]"
            name="q"
            type="text"
            title="Search"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            maxLength={2048}
            aria-label="Search"
            aria-autocomplete="both"
            aria-haspopup="false"
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect="off"
            autoFocus
            spellCheck="false"
            onBlur={() => setTouched(false)}
            onFocus={() => setTouched(true)}
          />

          {query && (
            <button onClick={() => setQuery('')}>
              <CrossIcon className="absolute w-5 h-5 text-gray-600 dark:text-gray-400 top-2/4 -translate-y-2/4 right-4" />
            </button>
          )}
        </form>

        <div className="flex mt-6 flex-wrap items-center justify-center max-w-[360px] mx-auto gap-2 sm:gap-5">
          <button onClick={(e) => handleSearch(e)} className="triggers">
            Google Search
          </button>

          <a
            href="https://www.google.com/doodles"
            rel="noopener noreferrer"
            className="triggers"
          >
            I'm Feeling Lucky
          </a>
        </div>

        <div></div>
      </main>

      <footer className="flex flex-col w-full text-gray-700 bg-primary-3 dark:text-white">
        <h1 className="flex items-center justify-center w-full h-full px-4 py-3 text-center border-b border-input-border/30">
          Search Google with persistent prefix and suffix tags
        </h1>
        <h2 className="flex items-center justify-center w-full h-full px-4 py-3 overflow-x-auto text-center whitespace-normal">
          Inspiration:
          <a
            className="mx-1 font-medium text-white whitespace-pre bg-green-500 rounded-md"
            href="https://www.tagglesearch.app/"
            rel="noopener noreferrer"
          >
            &nbsp;Taggle Search&nbsp;
          </a>
          by
          <a
            className="mx-1 font-medium text-white bg-green-500 rounded-md"
            href="https://danielrobertson.me/"
            rel="noopener noreferrer"
          >
            &nbsp;@danielrobertson
          </a>
        </h2>
      </footer>
    </>
  )
}

export default Home

interface IHeaderLinks {
  link: string
}

const HeaderLink: FC<IHeaderLinks> = ({ children, link }) => {
  return (
    <a
      href={link}
      target="_blank"
      rel="noopener noreferrer"
      className="overflow-hidden rounded-full w-8 h-8 p-0.5"
    >
      {children}
    </a>
  )
}
